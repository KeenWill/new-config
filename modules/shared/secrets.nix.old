{ inputs, ... }:

{

  # age.

  # Your secrets go here
  #
  # Note: the installWithSecrets command you ran to boostrap the machine actually copies over
  #       a Github key pair. However, if you want to store the keypair in your nix-secrets repo
  #       instead, you can reference the age files and specify the symlink path here. Then add your
  #       public key in shared/files.nix.
  #
  #       If you change the key name, you'll need to update the SSH extraConfig in shared/home-manager.nix
  #       so Github reads it correctly.

#   age.secrets."id_ed25519_old" = {
#     symlink = true;
#     path = "/Users/${user}/.ssh/id_ed25519_old";
#     file =  "${secrets}/id_ed25519_old.age";
#     mode = "600";
#     owner = "${user}";
#     group = "staff";
#   };

#   rekey = {
#     hostPubkey = "/etc/ssh/ssh_host_ed25519_key.pub"; # Or use a string with the file's content, or copy this file to the flake and use a path.
#     masterIdentities = [ "${inputs.self}/nix-secrets/identities/yubikey-1.txt" 
#     "${inputs.self}/nix-secrets/identities/yubikey-2.txt" ]; # primary yubikey split-identity file
#     extraEncryptionPubkeys = [ ]; # backup keys that are never used for decryption
#   };
  
  
  # age.secrets."github-ssh-key" = {
  #   symlink = true;
  #   path = "/Users/${user}/.ssh/id_github";
  #   file =  "${secrets}/github-ssh-key.age";
  #   mode = "600";
  #   owner = "${user}";
  #   group = "staff";
  # };

  # age.secrets."github-signing-key" = {
  #   symlink = false;
  #   path = "/Users/${user}/.ssh/pgp_github.key";
  #   file =  "${secrets}/github-signing-key.age";
  #   mode = "600";
  #   owner = "${user}";
  # };

}
